<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC   
"-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ccms.dao.StudentDAO">
	
	<!-- 添加学生 -->
	<insert id="add" parameterType="Student">
		insert into t_students( num, pwd, name, gender, phone, email, qq, rank_id, col_id, spec_id, introduce )
		values(#{num}, #{pwd}, #{name}, #{gender}, #{phone}, 
		#{email}, #{qq}, #{rank.id}, #{college.id}, #{specialty.id}, #{introduce});
	</insert>
	
	<!-- 更新学生 -->
	<update id="update" parameterType="Student">
		update t_students 
		<set> 
			<if test="num != null">num=#{num}, </if>
			<if test="pwd != null and pwd != '' ">pwd=#{pwd}, </if>
			<if test="name != null">name=#{name}, </if>
			<if test="gender != null">gender=#{gender}, </if>
			<if test="phone != null">phone=#{phone}, </if>
			<if test="email != null">email=#{email}, </if>
			<if test="qq != null">qq=#{qq}, </if>
			<if test="rank.id != null">rank_id=#{rank.id}, </if>
			<if test="college.id != null">col_id=#{college.id}, </if>
			<if test="specialty.id != null">spec_id=#{specialty.id}, </if>
			<if test="introduce != null"> introduce=#{introduce} </if>
		</set>
		where id=#{id};
	</update>
	
	
	<!-- 根据学号查询学生 -->
	<select id="queryByNum" parameterType="string" resultMap="StudentResultMap">
		select stu.id stu_id, stu.pwd, stu.num, stu.name stu_name, stu.gender, stu.phone, stu.email, stu.qq, 
		rank.id rand_id, rank.name rank_name, col.id col_id, col.name col_name, spe.id spe_id, spe.name spe_name
		FROM t_students stu 
		inner join t_ranks rank on stu.rank_id=rank.id
		inner join t_colleges col on stu.col_id=col.id 
		inner join t_specialty spe on stu.spec_id=spe.id 
		where stu.num=#{num};
	</select>	
	
	<!-- 根据学号和密码查询学生 -->
	<select id="queryByNumAndPwd" resultType="Student">
		select id, num, pwd, name FROM t_students where num=#{num} and pwd=#{pwd};
	</select>
	
	
	<!-- 根据id查询学生 -->
	<select id="queryById" parameterType="int" resultMap="StudentResultMap">
		select stu.id stu_id, stu.pwd, stu.num, stu.name stu_name, stu.gender, stu.phone, stu.email, stu.qq, 
		rank.id rank_id, rank.name rank_name, col.id col_id, col.name col_name, spe.id spe_id, spe.name spe_name
		FROM t_students stu 
		inner join t_ranks rank on stu.rank_id=rank.id
		inner join t_colleges col on stu.col_id=col.id 
		inner join t_specialty spe on stu.spec_id=spe.id 
		where stu.id=#{id};
	</select>	
	
	<resultMap type="Student" id="StudentResultMap">
		<id column="stu_id" property="id"/>
		<result column="pwd" property="pwd"/>
		<result column="num" property="num"/>
		<result column="stu_name" property="name"/>
		<result column="gender" property="gender"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email"/>
		<result column="qq" property="qq"/>
		
		<association property="rank" javaType="Rank">
			<id column="rank_id" property="id"/>
			<result column="rank_name" property="name"/>
		</association>
		
		<association property="college" javaType="College">
			<id column="col_id" property="id"/>
			<result column="col_name" property="name"/>
		</association>	
		<association property="specialty" javaType="Specialty">
			<id column="spe_id" property="id"/>
			<result column="spe_name" property="name"/>
		</association>	
				
	</resultMap>
	
	
</mapper>  























